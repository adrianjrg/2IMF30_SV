nu X(dO: DoorStatus = lock, dM: DoorStatus = lock, dI: DoorStatus = lock).(
    % keep track of doorstatus during operation
    [unlockDoor(inner)]X(dO, dM, unlock)            &&
    [unlockDoor(middle)]X(dO, unlock, dI)           &&
    [unlockDoor(outer)]X(unlock, dM, dI)            &&
    
    [doorState(inner, lock)]X(dO, dM, lock)         &&
    [doorState(middle, lock)]X(dO, lock, dI)        &&
    [doorState(outer, lock)]X(lock, dM, dI)         &&

    [doorState(outer, noreply)]X(noreply, dM, dI)   &&
    
    [forall p:Pressure. setPressure(main, p)](val(dO == lock && dM == lock))        &&
    [forall p:Pressure. setPressure(backup, p)](val(dM == lock && dI == lock))      &&
    % all other actions don't change anything
    [ !(unlockDoor(inner) || unlockDoor(middle) || unlockDoor(outer) || doorState(inner, lock) || 
        doorState(middle, lock) || doorState(outer, lock) || doorState(outer, noreply) ||
        setPressure(main, pressurized) || setPressure(main, unpressurized) ||
        setPressure(backup, pressurized) || setPressure(backup, unpressurized)) ]X(dO, dM, dI) &&
    % no deadlocks
    <true>true
)